import{_ as m,d as X,r as G,g as M,o as L,c as x,e as y,h as w}from"./index-BzzNysnl.js";const T="",H=a=>Uint8Array.from(atob(a),n=>n.charCodeAt(0)),i=typeof window<"u"&&window.Blob&&new Blob(["URL.revokeObjectURL(import.meta.url);",H(T)],{type:"text/javascript;charset=utf-8"});function z(a){let n;try{if(n=i&&(window.URL||window.webkitURL).createObjectURL(i),!n)throw"";const k=new Worker(n,{type:"module",name:a?.name});return k.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(n)}),k}catch{return new Worker("data:text/javascript;base64,"+T,{type:"module",name:a?.name})}}const D=new z;let C=0;const h={};D.onmessage=function(a){const n=a.data.id;h[n](a.data.data),delete h[n]};async function O(a){const n=C++;return new Promise(k=>{h[n]=k,D.postMessage({command:"compress",id:n,data:a})})}async function I(a){const n=C++;return new Promise(k=>{h[n]=k,D.postMessage({command:"decompress",id:n,data:a})})}var g=function(){var a=String.fromCharCode,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",k="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",p={};function c(F,Q){if(!p[F]){p[F]={};for(var l=0;l<F.length;l++)p[F][F.charAt(l)]=l}return p[F][Q]}var t={compressToBase64:function(F){if(F==null)return"";var Q=t._compress(F,6,function(l){return n.charAt(l)});switch(Q.length%4){default:case 0:return Q;case 1:return Q+"===";case 2:return Q+"==";case 3:return Q+"="}},decompressFromBase64:function(F){return F==null?"":F==""?null:t._decompress(F.length,32,function(Q){return c(n,F.charAt(Q))})},compressToUTF16:function(F){return F==null?"":t._compress(F,15,function(Q){return a(Q+32)})+" "},decompressFromUTF16:function(F){return F==null?"":F==""?null:t._decompress(F.length,16384,function(Q){return F.charCodeAt(Q)-32})},compressToUint8Array:function(F){for(var Q=t.compress(F),l=new Uint8Array(2*Q.length),B=0,V=Q.length;B<V;B++){var J=Q.charCodeAt(B);l[2*B]=J>>>8,l[2*B+1]=J%256}return l},decompressFromUint8Array:function(F){if(F==null)return t.decompress(F);for(var Q=new Array(F.length/2),l=0,B=Q.length;l<B;l++)Q[l]=256*F[2*l]+F[2*l+1];var V=[];return Q.forEach(function(J){V.push(a(J))}),t.decompress(V.join(""))},compressToEncodedURIComponent:function(F){return F==null?"":t._compress(F,6,function(Q){return k.charAt(Q)})},decompressFromEncodedURIComponent:function(F){return F==null?"":F==""?null:(F=F.replace(/ /g,"+"),t._decompress(F.length,32,function(Q){return c(k,F.charAt(Q))}))},compress:function(F){return t._compress(F,16,function(Q){return a(Q)})},_compress:function(F,Q,l){if(F==null)return"";var B,V,J,Z={},e={},d="",E="",S="",o=2,r=3,W=2,N=[],R=0,U=0;for(J=0;J<F.length;J+=1)if(d=F.charAt(J),Object.prototype.hasOwnProperty.call(Z,d)||(Z[d]=r++,e[d]=!0),E=S+d,Object.prototype.hasOwnProperty.call(Z,E))S=E;else{if(Object.prototype.hasOwnProperty.call(e,S)){if(S.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,N.push(l(R)),R=0):U++;for(V=S.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V>>=1}else{for(V=1,B=0;B<W;B++)R=R<<1|V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V=0;for(V=S.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V>>=1}--o==0&&(o=Math.pow(2,W),W++),delete e[S]}else for(V=Z[S],B=0;B<W;B++)R=R<<1|1&V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V>>=1;--o==0&&(o=Math.pow(2,W),W++),Z[E]=r++,S=String(d)}if(S!==""){if(Object.prototype.hasOwnProperty.call(e,S)){if(S.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,N.push(l(R)),R=0):U++;for(V=S.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V>>=1}else{for(V=1,B=0;B<W;B++)R=R<<1|V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V=0;for(V=S.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V>>=1}--o==0&&(o=Math.pow(2,W),W++),delete e[S]}else for(V=Z[S],B=0;B<W;B++)R=R<<1|1&V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V>>=1;--o==0&&(o=Math.pow(2,W),W++)}for(V=2,B=0;B<W;B++)R=R<<1|1&V,U==Q-1?(U=0,N.push(l(R)),R=0):U++,V>>=1;for(;;){if(R<<=1,U==Q-1){N.push(l(R));break}U++}return N.join("")},decompress:function(F){return F==null?"":F==""?null:t._decompress(F.length,32768,function(Q){return F.charCodeAt(Q)})},_decompress:function(F,Q,l){var B,V,J,Z,e,d,E,S=[],o=4,r=4,W=3,N="",R=[],U={val:l(0),position:Q,index:1};for(B=0;B<3;B+=1)S[B]=B;for(J=0,e=Math.pow(2,2),d=1;d!=e;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=l(U.index++)),J|=(Z>0?1:0)*d,d<<=1;switch(J){case 0:for(J=0,e=Math.pow(2,8),d=1;d!=e;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=l(U.index++)),J|=(Z>0?1:0)*d,d<<=1;E=a(J);break;case 1:for(J=0,e=Math.pow(2,16),d=1;d!=e;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=l(U.index++)),J|=(Z>0?1:0)*d,d<<=1;E=a(J);break;case 2:return""}for(S[3]=E,V=E,R.push(E);;){if(U.index>F)return"";for(J=0,e=Math.pow(2,W),d=1;d!=e;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=l(U.index++)),J|=(Z>0?1:0)*d,d<<=1;switch(E=J){case 0:for(J=0,e=Math.pow(2,8),d=1;d!=e;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=l(U.index++)),J|=(Z>0?1:0)*d,d<<=1;S[r++]=a(J),E=r-1,o--;break;case 1:for(J=0,e=Math.pow(2,16),d=1;d!=e;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=l(U.index++)),J|=(Z>0?1:0)*d,d<<=1;S[r++]=a(J),E=r-1,o--;break;case 2:return R.join("")}if(o==0&&(o=Math.pow(2,W),W++),S[E])N=S[E];else{if(E!==r)return null;N=V+V.charAt(0)}R.push(N),S[r++]=V+N.charAt(0),V=N,--o==0&&(o=Math.pow(2,W),W++)}}};return t}();const s=g,u=m(()=>import("./512KB-Cmx0pFrj.js"),[]),Y=m(()=>import("./1MB-DNCdY0QL.js"),[]),b=m(()=>import("./rw_medium-B8IwR0iT.js"),[]),v=m(()=>import("./rw_large-DP7720Ef.js"),[]);JSON.stringify(await u),JSON.stringify(await Y),JSON.stringify(await b),JSON.stringify(await v);const j=X({__name:"LibBenchmark",setup(a){const n=G({compressed:{},decompressed:{},success:{},size:{}});async function k(p,c,t,F,Q){const l=performance.now(),B=await F(t),V=performance.now()-l;localStorage.setItem("compressed",B);const J=localStorage.getItem("compressed");localStorage.removeItem("compressed");const Z=performance.now(),e=await Q(J),d=performance.now()-Z;n.value.compressed[c]||(n.value.compressed[c]={},n.value.decompressed[c]={},n.value.success[c]={},n.value.size[c]={}),n.value.compressed[c][p]=V,n.value.size[c][p]=100*(B.length/t.length),n.value.decompressed[c][p]=d,n.value.success[c][p]=t===e}return M(async()=>{const p=[{name:"json_512kb",input:JSON.stringify((await u).default)},{name:"json_1mb",input:JSON.stringify((await Y).default)},{name:"json_4mb",input:JSON.stringify((await b).default)},{name:"json_8mb",input:JSON.stringify((await v).default)}];for(const{name:c,input:t}of p)await k("smol-string",c,t,O,I),await k("LZString",c,t,s.compress,s.decompress),await k("LZString UTF-16",c,t,s.compressToUTF16,s.decompressFromUTF16)}),(p,c)=>(L(),x("div",null,[y(w,{results:n.value},null,8,["results"])]))}});export{j as default};
