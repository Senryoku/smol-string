import{_ as C,d as M,r as X,g as b,o as L,c as y,e as w,h as H}from"./index-tGR5-Nos.js";const T="",x=N=>Uint8Array.from(atob(N),n=>n.charCodeAt(0)),i=typeof window<"u"&&window.Blob&&new Blob(["URL.revokeObjectURL(import.meta.url);",x(T)],{type:"text/javascript;charset=utf-8"});function O(N){let n;try{if(n=i&&(window.URL||window.webkitURL).createObjectURL(i),!n)throw"";const o=new Worker(n,{type:"module",name:N?.name});return o.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(n)}),o}catch{return new Worker("data:text/javascript;base64,"+T,{type:"module",name:N?.name})}}const h=new O;let D=0;const s={};h.onmessage=function(N){const n=N.data.id;s[n](N.data.data),delete s[n]};async function z(N){const n=D++;return new Promise(o=>{s[n]=o,h.postMessage({command:"compress",id:n,data:N})})}async function j(N){const n=D++;return new Promise(o=>{s[n]=o,h.postMessage({command:"decompress",id:n,data:N})})}var K=function(){var N=String.fromCharCode,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",p={};function k(F,Q){if(!p[F]){p[F]={};for(var V=0;V<F.length;V++)p[F][F.charAt(V)]=V}return p[F][Q]}var a={compressToBase64:function(F){if(F==null)return"";var Q=a._compress(F,6,function(V){return n.charAt(V)});switch(Q.length%4){default:case 0:return Q;case 1:return Q+"===";case 2:return Q+"==";case 3:return Q+"="}},decompressFromBase64:function(F){return F==null?"":F==""?null:a._decompress(F.length,32,function(Q){return k(n,F.charAt(Q))})},compressToUTF16:function(F){return F==null?"":a._compress(F,15,function(Q){return N(Q+32)})+" "},decompressFromUTF16:function(F){return F==null?"":F==""?null:a._decompress(F.length,16384,function(Q){return F.charCodeAt(Q)-32})},compressToUint8Array:function(F){for(var Q=a.compress(F),V=new Uint8Array(2*Q.length),B=0,l=Q.length;B<l;B++){var J=Q.charCodeAt(B);V[2*B]=J>>>8,V[2*B+1]=J%256}return V},decompressFromUint8Array:function(F){if(F==null)return a.decompress(F);for(var Q=new Array(F.length/2),V=0,B=Q.length;V<B;V++)Q[V]=256*F[2*V]+F[2*V+1];var l=[];return Q.forEach(function(J){l.push(N(J))}),a.decompress(l.join(""))},compressToEncodedURIComponent:function(F){return F==null?"":a._compress(F,6,function(Q){return o.charAt(Q)})},decompressFromEncodedURIComponent:function(F){return F==null?"":F==""?null:(F=F.replace(/ /g,"+"),a._decompress(F.length,32,function(Q){return k(o,F.charAt(Q))}))},compress:function(F){return a._compress(F,16,function(Q){return N(Q)})},_compress:function(F,Q,V){if(F==null)return"";var B,l,J,Z={},t={},d="",E="",S="",c=2,r=3,W=2,e=[],R=0,U=0;for(J=0;J<F.length;J+=1)if(d=F.charAt(J),Object.prototype.hasOwnProperty.call(Z,d)||(Z[d]=r++,t[d]=!0),E=S+d,Object.prototype.hasOwnProperty.call(Z,E))S=E;else{if(Object.prototype.hasOwnProperty.call(t,S)){if(S.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,e.push(V(R)),R=0):U++;for(l=S.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l>>=1}else{for(l=1,B=0;B<W;B++)R=R<<1|l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l=0;for(l=S.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l>>=1}--c==0&&(c=Math.pow(2,W),W++),delete t[S]}else for(l=Z[S],B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l>>=1;--c==0&&(c=Math.pow(2,W),W++),Z[E]=r++,S=String(d)}if(S!==""){if(Object.prototype.hasOwnProperty.call(t,S)){if(S.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,e.push(V(R)),R=0):U++;for(l=S.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l>>=1}else{for(l=1,B=0;B<W;B++)R=R<<1|l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l=0;for(l=S.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l>>=1}--c==0&&(c=Math.pow(2,W),W++),delete t[S]}else for(l=Z[S],B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l>>=1;--c==0&&(c=Math.pow(2,W),W++)}for(l=2,B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,e.push(V(R)),R=0):U++,l>>=1;for(;;){if(R<<=1,U==Q-1){e.push(V(R));break}U++}return e.join("")},decompress:function(F){return F==null?"":F==""?null:a._decompress(F.length,32768,function(Q){return F.charCodeAt(Q)})},_decompress:function(F,Q,V){var B,l,J,Z,t,d,E,S=[],c=4,r=4,W=3,e="",R=[],U={val:V(0),position:Q,index:1};for(B=0;B<3;B+=1)S[B]=B;for(J=0,t=Math.pow(2,2),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;switch(J){case 0:for(J=0,t=Math.pow(2,8),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;E=N(J);break;case 1:for(J=0,t=Math.pow(2,16),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;E=N(J);break;case 2:return""}for(S[3]=E,l=E,R.push(E);;){if(U.index>F)return"";for(J=0,t=Math.pow(2,W),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;switch(E=J){case 0:for(J=0,t=Math.pow(2,8),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;S[r++]=N(J),E=r-1,c--;break;case 1:for(J=0,t=Math.pow(2,16),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;S[r++]=N(J),E=r-1,c--;break;case 2:return R.join("")}if(c==0&&(c=Math.pow(2,W),W++),S[E])e=S[E];else{if(E!==r)return null;e=l+l.charAt(0)}R.push(e),S[r++]=l+e.charAt(0),l=e,--c==0&&(c=Math.pow(2,W),W++)}}};return a}();const m=K,u=C(()=>import("./512KB-Cmx0pFrj.js"),[]),Y=C(()=>import("./1MB-DNCdY0QL.js"),[]),G=C(()=>import("./rw_medium-B8IwR0iT.js"),[]),v=C(()=>import("./rw_large-DP7720Ef.js"),[]);JSON.stringify(await u),JSON.stringify(await Y),JSON.stringify(await G),JSON.stringify(await v);const g=M({__name:"LibBenchmark",setup(N){const n=X({compressed:{},decompressed:{},success:{},size:{}});async function o(p,k,a,F,Q){const V=performance.now(),B=await F(a),l=performance.now()-V;localStorage.setItem("compressed",B);const J=localStorage.getItem("compressed");localStorage.removeItem("compressed");const Z=performance.now(),t=await Q(J),d=performance.now()-Z;n.value.compressed[k]||(n.value.compressed[k]={},n.value.decompressed[k]={},n.value.success[k]={},n.value.size[k]={}),n.value.compressed[k][p]=l,n.value.size[k][p]=100*(B.length/a.length),n.value.decompressed[k][p]=d,n.value.success[k][p]=a===t}return b(async()=>{const p=[{name:"json_512kb",input:JSON.stringify((await u).default)},{name:"json_1mb",input:JSON.stringify((await Y).default)},{name:"json_4mb",input:JSON.stringify((await G).default)},{name:"json_8mb",input:JSON.stringify((await v).default)}];for(const{name:k,input:a}of p)await o("smol-string",k,a,z,j),await o("LZString",k,a,m.compress,m.decompress),await o("LZString UTF-16",k,a,m.compressToUTF16,m.decompressFromUTF16)}),(p,k)=>(L(),y("div",null,[w(H,{results:n.value},null,8,["results"])]))}});export{g as default};
