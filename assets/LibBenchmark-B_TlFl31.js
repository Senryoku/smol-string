import{_ as m,d as G,r as M,g as X,o as y,c as L,e as w,h as x}from"./index-BSZnI0Ia.js";const D="",z=a=>Uint8Array.from(atob(a),n=>n.charCodeAt(0)),T=typeof window<"u"&&window.Blob&&new Blob(["URL.revokeObjectURL(import.meta.url);",z(D)],{type:"text/javascript;charset=utf-8"});function O(a){let n;try{if(n=T&&(window.URL||window.webkitURL).createObjectURL(T),!n)throw"";const k=new Worker(n,{type:"module",name:a?.name});return k.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(n)}),k}catch{return new Worker("data:text/javascript;base64,"+D,{type:"module",name:a?.name})}}const i=new O;let C=0;const h={};i.onmessage=function(a){const n=a.data.id;h[n](a.data.data),delete h[n]};async function K(a){const n=C++;return new Promise(k=>{h[n]=k,i.postMessage({command:"compress",id:n,data:a})})}async function H(a){const n=C++;return new Promise(k=>{h[n]=k,i.postMessage({command:"decompress",id:n,data:a})})}var I=function(){var a=String.fromCharCode,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",k="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",p={};function e(F,Q){if(!p[F]){p[F]={};for(var V=0;V<F.length;V++)p[F][F.charAt(V)]=V}return p[F][Q]}var N={compressToBase64:function(F){if(F==null)return"";var Q=N._compress(F,6,function(V){return n.charAt(V)});switch(Q.length%4){default:case 0:return Q;case 1:return Q+"===";case 2:return Q+"==";case 3:return Q+"="}},decompressFromBase64:function(F){return F==null?"":F==""?null:N._decompress(F.length,32,function(Q){return e(n,F.charAt(Q))})},compressToUTF16:function(F){return F==null?"":N._compress(F,15,function(Q){return a(Q+32)})+" "},decompressFromUTF16:function(F){return F==null?"":F==""?null:N._decompress(F.length,16384,function(Q){return F.charCodeAt(Q)-32})},compressToUint8Array:function(F){for(var Q=N.compress(F),V=new Uint8Array(2*Q.length),B=0,l=Q.length;B<l;B++){var J=Q.charCodeAt(B);V[2*B]=J>>>8,V[2*B+1]=J%256}return V},decompressFromUint8Array:function(F){if(F==null)return N.decompress(F);for(var Q=new Array(F.length/2),V=0,B=Q.length;V<B;V++)Q[V]=256*F[2*V]+F[2*V+1];var l=[];return Q.forEach(function(J){l.push(a(J))}),N.decompress(l.join(""))},compressToEncodedURIComponent:function(F){return F==null?"":N._compress(F,6,function(Q){return k.charAt(Q)})},decompressFromEncodedURIComponent:function(F){return F==null?"":F==""?null:(F=F.replace(/ /g,"+"),N._decompress(F.length,32,function(Q){return e(k,F.charAt(Q))}))},compress:function(F){return N._compress(F,16,function(Q){return a(Q)})},_compress:function(F,Q,V){if(F==null)return"";var B,l,J,S={},t={},d="",c="",Z="",o=2,r=3,W=2,E=[],R=0,U=0;for(J=0;J<F.length;J+=1)if(d=F.charAt(J),Object.prototype.hasOwnProperty.call(S,d)||(S[d]=r++,t[d]=!0),c=Z+d,Object.prototype.hasOwnProperty.call(S,c))Z=c;else{if(Object.prototype.hasOwnProperty.call(t,Z)){if(Z.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,E.push(V(R)),R=0):U++;for(l=Z.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}else{for(l=1,B=0;B<W;B++)R=R<<1|l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l=0;for(l=Z.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}--o==0&&(o=Math.pow(2,W),W++),delete t[Z]}else for(l=S[Z],B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1;--o==0&&(o=Math.pow(2,W),W++),S[c]=r++,Z=String(d)}if(Z!==""){if(Object.prototype.hasOwnProperty.call(t,Z)){if(Z.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,E.push(V(R)),R=0):U++;for(l=Z.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}else{for(l=1,B=0;B<W;B++)R=R<<1|l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l=0;for(l=Z.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}--o==0&&(o=Math.pow(2,W),W++),delete t[Z]}else for(l=S[Z],B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1;--o==0&&(o=Math.pow(2,W),W++)}for(l=2,B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1;for(;;){if(R<<=1,U==Q-1){E.push(V(R));break}U++}return E.join("")},decompress:function(F){return F==null?"":F==""?null:N._decompress(F.length,32768,function(Q){return F.charCodeAt(Q)})},_decompress:function(F,Q,V){var B,l,J,S,t,d,c,Z=[],o=4,r=4,W=3,E="",R=[],U={val:V(0),position:Q,index:1};for(B=0;B<3;B+=1)Z[B]=B;for(J=0,t=Math.pow(2,2),d=1;d!=t;)S=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(S>0?1:0)*d,d<<=1;switch(J){case 0:for(J=0,t=Math.pow(2,8),d=1;d!=t;)S=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(S>0?1:0)*d,d<<=1;c=a(J);break;case 1:for(J=0,t=Math.pow(2,16),d=1;d!=t;)S=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(S>0?1:0)*d,d<<=1;c=a(J);break;case 2:return""}for(Z[3]=c,l=c,R.push(c);;){if(U.index>F)return"";for(J=0,t=Math.pow(2,W),d=1;d!=t;)S=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(S>0?1:0)*d,d<<=1;switch(c=J){case 0:for(J=0,t=Math.pow(2,8),d=1;d!=t;)S=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(S>0?1:0)*d,d<<=1;Z[r++]=a(J),c=r-1,o--;break;case 1:for(J=0,t=Math.pow(2,16),d=1;d!=t;)S=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(S>0?1:0)*d,d<<=1;Z[r++]=a(J),c=r-1,o--;break;case 2:return R.join("")}if(o==0&&(o=Math.pow(2,W),W++),Z[c])E=Z[c];else{if(c!==r)return null;E=l+l.charAt(0)}R.push(E),Z[r++]=l+E.charAt(0),l=E,--o==0&&(o=Math.pow(2,W),W++)}}};return N}();const s=I,u=m(()=>import("./512KB-Cmx0pFrj.js"),[]),Y=m(()=>import("./1MB-DNCdY0QL.js"),[]),b=m(()=>import("./rw_medium-B8IwR0iT.js"),[]),v=m(()=>import("./rw_large-DP7720Ef.js"),[]);JSON.stringify(await u),JSON.stringify(await Y),JSON.stringify(await b),JSON.stringify(await v);const j=G({__name:"LibBenchmark",setup(a){const n=M({compressed:{},decompressed:{},success:{},size:{}});async function k(p,e,N,F,Q){const V=performance.now(),B=await F(N),l=performance.now()-V;localStorage.setItem("compressed",B);const J=localStorage.getItem("compressed");localStorage.removeItem("compressed");const S=performance.now(),t=await Q(J),d=performance.now()-S;n.value.compressed[e]||(n.value.compressed[e]={},n.value.decompressed[e]={},n.value.success[e]={},n.value.size[e]={}),n.value.compressed[e][p]=l,n.value.size[e][p]=100*(B.length/N.length),n.value.decompressed[e][p]=d,n.value.success[e][p]=N===t}return X(async()=>{const p=[{name:"json_512kb",input:JSON.stringify((await u).default)},{name:"json_1mb",input:JSON.stringify((await Y).default)},{name:"json_4mb",input:JSON.stringify((await b).default)},{name:"json_8mb",input:JSON.stringify((await v).default)}];for(const{name:e,input:N}of p)await k("smol-string",e,N,K,H),await k("LZString",e,N,s.compress,s.decompress),await k("LZString UTF-16",e,N,s.compressToUTF16,s.decompressFromUTF16)}),(p,e)=>(y(),L("div",null,[w(x,{results:n.value},null,8,["results"])]))}});export{j as default};
