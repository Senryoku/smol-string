import{_ as D,d as M,r as G,g as X,o as L,c as w,e as y,h as z}from"./index-C_lhgiBv.js";const T="",x=a=>Uint8Array.from(atob(a),n=>n.charCodeAt(0)),i=typeof window<"u"&&window.Blob&&new Blob(["URL.revokeObjectURL(import.meta.url);",x(T)],{type:"text/javascript;charset=utf-8"});function O(a){let n;try{if(n=i&&(window.URL||window.webkitURL).createObjectURL(i),!n)throw"";const o=new Worker(n,{type:"module",name:a?.name});return o.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(n)}),o}catch{return new Worker("data:text/javascript;base64,"+T,{type:"module",name:a?.name})}}const m=new O;let C=0;const h={};m.onmessage=function(a){const n=a.data.id;h[n](a.data.data),delete h[n]};async function I(a){const n=C++;return new Promise(o=>{h[n]=o,m.postMessage({command:"compress",id:n,data:a})})}async function H(a){const n=C++;return new Promise(o=>{h[n]=o,m.postMessage({command:"decompress",id:n,data:a})})}var K=function(){var a=String.fromCharCode,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",r={};function c(F,Q){if(!r[F]){r[F]={};for(var V=0;V<F.length;V++)r[F][F.charAt(V)]=V}return r[F][Q]}var N={compressToBase64:function(F){if(F==null)return"";var Q=N._compress(F,6,function(V){return n.charAt(V)});switch(Q.length%4){default:case 0:return Q;case 1:return Q+"===";case 2:return Q+"==";case 3:return Q+"="}},decompressFromBase64:function(F){return F==null?"":F==""?null:N._decompress(F.length,32,function(Q){return c(n,F.charAt(Q))})},compressToUTF16:function(F){return F==null?"":N._compress(F,15,function(Q){return a(Q+32)})+" "},decompressFromUTF16:function(F){return F==null?"":F==""?null:N._decompress(F.length,16384,function(Q){return F.charCodeAt(Q)-32})},compressToUint8Array:function(F){for(var Q=N.compress(F),V=new Uint8Array(2*Q.length),B=0,l=Q.length;B<l;B++){var J=Q.charCodeAt(B);V[2*B]=J>>>8,V[2*B+1]=J%256}return V},decompressFromUint8Array:function(F){if(F==null)return N.decompress(F);for(var Q=new Array(F.length/2),V=0,B=Q.length;V<B;V++)Q[V]=256*F[2*V]+F[2*V+1];var l=[];return Q.forEach(function(J){l.push(a(J))}),N.decompress(l.join(""))},compressToEncodedURIComponent:function(F){return F==null?"":N._compress(F,6,function(Q){return o.charAt(Q)})},decompressFromEncodedURIComponent:function(F){return F==null?"":F==""?null:(F=F.replace(/ /g,"+"),N._decompress(F.length,32,function(Q){return c(o,F.charAt(Q))}))},compress:function(F){return N._compress(F,16,function(Q){return a(Q)})},_compress:function(F,Q,V){if(F==null)return"";var B,l,J,Z={},t={},d="",e="",S="",k=2,p=3,W=2,E=[],R=0,U=0;for(J=0;J<F.length;J+=1)if(d=F.charAt(J),Object.prototype.hasOwnProperty.call(Z,d)||(Z[d]=p++,t[d]=!0),e=S+d,Object.prototype.hasOwnProperty.call(Z,e))S=e;else{if(Object.prototype.hasOwnProperty.call(t,S)){if(S.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,E.push(V(R)),R=0):U++;for(l=S.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}else{for(l=1,B=0;B<W;B++)R=R<<1|l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l=0;for(l=S.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}--k==0&&(k=Math.pow(2,W),W++),delete t[S]}else for(l=Z[S],B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1;--k==0&&(k=Math.pow(2,W),W++),Z[e]=p++,S=String(d)}if(S!==""){if(Object.prototype.hasOwnProperty.call(t,S)){if(S.charCodeAt(0)<256){for(B=0;B<W;B++)R<<=1,U==Q-1?(U=0,E.push(V(R)),R=0):U++;for(l=S.charCodeAt(0),B=0;B<8;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}else{for(l=1,B=0;B<W;B++)R=R<<1|l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l=0;for(l=S.charCodeAt(0),B=0;B<16;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1}--k==0&&(k=Math.pow(2,W),W++),delete t[S]}else for(l=Z[S],B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1;--k==0&&(k=Math.pow(2,W),W++)}for(l=2,B=0;B<W;B++)R=R<<1|1&l,U==Q-1?(U=0,E.push(V(R)),R=0):U++,l>>=1;for(;;){if(R<<=1,U==Q-1){E.push(V(R));break}U++}return E.join("")},decompress:function(F){return F==null?"":F==""?null:N._decompress(F.length,32768,function(Q){return F.charCodeAt(Q)})},_decompress:function(F,Q,V){var B,l,J,Z,t,d,e,S=[],k=4,p=4,W=3,E="",R=[],U={val:V(0),position:Q,index:1};for(B=0;B<3;B+=1)S[B]=B;for(J=0,t=Math.pow(2,2),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;switch(J){case 0:for(J=0,t=Math.pow(2,8),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;e=a(J);break;case 1:for(J=0,t=Math.pow(2,16),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;e=a(J);break;case 2:return""}for(S[3]=e,l=e,R.push(e);;){if(U.index>F)return"";for(J=0,t=Math.pow(2,W),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;switch(e=J){case 0:for(J=0,t=Math.pow(2,8),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;S[p++]=a(J),e=p-1,k--;break;case 1:for(J=0,t=Math.pow(2,16),d=1;d!=t;)Z=U.val&U.position,U.position>>=1,U.position==0&&(U.position=Q,U.val=V(U.index++)),J|=(Z>0?1:0)*d,d<<=1;S[p++]=a(J),e=p-1,k--;break;case 2:return R.join("")}if(k==0&&(k=Math.pow(2,W),W++),S[e])E=S[e];else{if(e!==p)return null;E=l+l.charAt(0)}R.push(E),S[p++]=l+E.charAt(0),l=E,--k==0&&(k=Math.pow(2,W),W++)}}};return N}();const s=K,u=D(()=>import("./512KB-Cmx0pFrj.js"),[]),b=D(()=>import("./1MB-DNCdY0QL.js"),[]),Y=D(()=>import("./rw_medium-B8IwR0iT.js"),[]),v=D(()=>import("./rw_large-DP7720Ef.js"),[]);JSON.stringify(await u),JSON.stringify(await b),JSON.stringify(await Y),JSON.stringify(await v);const j=M({__name:"LibBenchmark",setup(a){const n=G({compressed:{},decompressed:{},success:{},size:{}});async function o(r,c,N,F,Q){const V=performance.now(),B=await F(N),l=performance.now()-V;localStorage.setItem("compressed",B);const J=localStorage.getItem("compressed");localStorage.removeItem("compressed");const Z=performance.now(),t=await Q(J),d=performance.now()-Z;n.value.compressed[c]||(n.value.compressed[c]={},n.value.decompressed[c]={},n.value.success[c]={},n.value.size[c]={}),n.value.compressed[c][r]=l,n.value.size[c][r]=100*(B.length/N.length),n.value.decompressed[c][r]=d,n.value.success[c][r]=N===t}return X(async()=>{const r=[{name:"json_512kb",input:JSON.stringify((await u).default)},{name:"json_1mb",input:JSON.stringify((await b).default)},{name:"json_4mb",input:JSON.stringify((await Y).default)},{name:"json_8mb",input:JSON.stringify((await v).default)}];for(const{name:c,input:N}of r)await o("smol-string",c,N,I,H),await o("LZString",c,N,s.compress,s.decompress),await o("LZString UTF-16",c,N,s.compressToUTF16,s.decompressFromUTF16)}),(r,c)=>(L(),w("div",null,[y(z,{results:n.value},null,8,["results"])]))}});export{j as default};
